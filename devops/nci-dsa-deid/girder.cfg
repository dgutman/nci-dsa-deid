[global]
server.socket_host = "0.0.0.0"
server.max_request_body_size = 1073741824
tools.proxy.on = True
[database]
uri = "mongodb://mongodb:27017/girder?socketTimeoutMS=3600000"

[server]
# Set to "production" or "development"
mode = "development"
# Disable the event daemon if you do not wish to run event handlers in a background thread.
# This may be necessary in certain deployment modes.
disable_event_daemon = False
enable_notification_stream = True

[logging]
log_root = "/logs"
log_access = ["screen", "info"]
# Log everything to the info log (errors also go to the error log)
log_max_info_level = "CRITICAL"
# Increase maximum size of log file
log_max_size = "10 Mb"

[large_image]
#  cache_backend is either "memcached" (default) or "python"
cache_backend = "memcached"
cache_memcached_url = "memcached"
cache_memcached_username = None
cache_memcached_password = None
#  cache_python_memory_portion affects memory use when using python caching.
#  Higher numbers use less memory.
# cache_python_memory_portion = 8
#  These can be used to reduce the amount of memory used for caching tile
#  sources
# cache_tilesource_memory_portion = 16
cache_tilesource_maximum = 64

[cache]
enabled = True

[histomicsui]
# If restrict_downloads is True, only logged-in users can access download
# and tiles/images endpoints.  If this is a number, file and item download
# endpoints can be used by anonymous users for files up to the specified
# size in bytes.  This setting does not affect logged-in users.
restrict_downloads = 100000

[wsi_deid]
redact_macro_square = True  ## Important keys.. I always want to default the macro square
always_redact_label = True  ## I also want to always redact the label
edit_metadata = False
require_redact_category = True
require_reject_reason = True
add_title_to_label = True
show_import_button = True
show_export_button = True
show_next_item = True
show_metadata_in_lists = True
show_next_folder = True
reimport_if_moved = False
no_redact_control_keys = {
    "^internal;aperio_version$": "",
    "^internal;openslide;openslide\.(?!comment$)": "",
    "^internal;openslide;tiff\.(ResolutionUnit|XResolution|YResolution)$": "^\s*[+-]?(\d+([.]\d*)?([eE][+-]?\d+)?|[.]\d+([eE][+-]?\d+)?)(\s*,\s*[+-]?(\d+([.]\d*)?([eE][+-]?\d+)?|[.]\d+([eE][+-]?\d+)?))*\s*$",
    "^internal;openslide;tiff\.ResolutionUnit": ""}
no_redact_control_keys_format_aperio = {
    "^internal;openslide;aperio\.(AppMag|MPP|Exposure (Time|Scale))$": "^\s*[+-]?(\d+([.]\d*)?([eE][+-]?\d+)?|[.]\d+([eE][+-]?\d+)?)(\s*,\s*[+-]?(\d+([.]\d*)?([eE][+-]?\d+)?|[.]\d+([eE][+-]?\d+)?))*\s*$"}
no_redact_control_keys_format_hamamatsu = {
    "^internal;openslide;hamamatsu\.SourceLens$": "^\s*[+-]?(\d+([.]\d*)?([eE][+-]?\d+)?|[.]\d+([eE][+-]?\d+)?)(\s*,\s*[+-]?(\d+([.]\d*)?([eE][+-]?\d+)?|[.]\d+([eE][+-]?\d+)?))*\s*$"}
no_redact_control_keys_format_philips = {}
hide_metadata_keys = {
    "^internal;openslide;openslide\.level\[": "^\s*[+-]?(\d+([.]\d*)?([eE][+-]?\d+)?|[.]\d+([eE][+-]?\d+)?)(\s*,\s*[+-]?(\d+([.]\d*)?([eE][+-]?\d+)?|[.]\d+([eE][+-]?\d+)?))*\s*$"}
hide_metadata_keys_format_aperio = {
    "^internal;openslide;(openslide\.comment|tiff\.ImageDescription)$": "",
    "^internal;openslide;aperio\.(Original(Height|Width)|Left|Top|Right|Bottom|LineArea(X|Y)Offset|LineCameraSkew|Focus Offset|StripeWidth|DisplayColor)": "^\s*[+-]?(\d+([.]\d*)?([eE][+-]?\d+)?|[.]\d+([eE][+-]?\d+)?)(\s*,\s*[+-]?(\d+([.]\d*)?([eE][+-]?\d+)?|[.]\d+([eE][+-]?\d+)?))*\s*$"}
hide_metadata_keys_format_hamamatsu = {
    "^internal;openslide;hamamatsu\.((AHEX|MHLN|YRNP|zCoarse|zFine)\[|(X|Y)OffsetFromSlideCentre|ccd.(width|height)|(focalplane|slant)\.(left|right)(top|bottom)|stage.center)": "^\s*[+-]?(\d+([.]\d*)?([eE][+-]?\d+)?|[.]\d+([eE][+-]?\d+)?)(\s*,\s*[+-]?(\d+([.]\d*)?([eE][+-]?\d+)?|[.]\d+([eE][+-]?\d+)?))*\s*$"}
hide_metadata_keys_format_philips = {}
upload_metadata_for_export_report = ["TokenID", "SurgPathNum", "Registry", "Tumor_Rec_Number", "Histology_Code", "Behavior_Code"]
import_text_association_columns = ["SurgPathNum", "First_Name", "Last_Name", "Date_of_Birth_mmddyyyy"]

new_token_pattern = "####@@######"
reject_reasons = [{
    "category": "Cannot_Redact",
    "text": 'Cannot redact PHI',
    "key": 'Cannot_Redact' }, {
    "category": 'Slide_Quality',
    "text": 'Slide Quality',
    "types": [
        { "key": "Chatter_Tears", "text": "Chatter/tears in tissue" },
        { "key": "Folded_Tissue", "text": "Folded tissue" },
        { "key": "Overstaining", "text": "Overstaining" },
        { "key": "Cover_Slip", "text": "Cover slip issues" },
        { "key": "Debris", "text": "Debris or dust" },
        { "key": "Air_Bubbles", "text": "Air bubbles" },
        { "key": "Pathologist_Markings", "text": "Pathologist's Markings" },
        { "key": "Other_Slide_Quality", "text": "Other" }]}, {
    "category": "Image_Quality",
    "text": "Image Quality",
    "types": [
        { "key": "Out_Of_Focus", "text": "Out of focus" },
        { "key": "Low_Resolution", "text": "Low resolution" },
        { "key": "Other_Image_Quality", "text": "Other" }]}]
phi_pii_types = [{
    "category": "Personal_Info",
    "text": "Personal Information",
    "types": [
        { "key": "Patient_Name", "text": "Patient Name" },
        { "key": "Patient_DOB", "text": "Date of Birth " },
        { "key": "SSN", "text": "Social Security Number" },
        { "key": "Other_Personal", "text": "Other Personal" }]}, {
    "category": "Demographics",
    "key": "Demographics",
    "text": "Demographics"}, {
    "category": "Facility_Physician",
    "key": "Facility_Physician",
    "text": "Facility/Physician Information"}, {
    "category": "Other_PHIPII",
    "key": "Other_PHIPII",
    "text": "Other PHI/PII"}]

# These are critical fields that map the original file name and create the folder structure
# where files are moved into
folder_name_field = "SampleID"
# Use a blank value to not require the image name
image_name_field = "OutputFileName"

validate_image_id_field = False
